{"version":3,"sources":["img/profileImage.PNG","components/Header/Nav.js","components/Header/Social.js","components/Header/Header.js","components/Intro/Intro.js","components/Project/ProjectCard.js","data/projectData.js","components/Project/Project.js","data/skillData.js","components/Skills/SkillCard.js","components/Skills/Skills.js","components/About/About.js","components/Contact/Contact.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","id","onClick","this","props","React","Component","Social","className","window","open","icon","faGithubSquare","Header","src","ProfileImage","alt","Intro","ProjectButton","styled","button","ProjectCard","Card","CardBody","CardTitle","title","CardSubtitle","stack","CardText","desc","roles","projectURL","gitHubURL","projectData","techStack","Project","useState","data","map","card","index","key","url","imgsrc","skillData","iconClass","skillName","SkillCard","name","Skills","faHtml5","faCss3","faLess","faReact","faNodeJs","faCode","username","About","Contact","type","Page","currentPage","App","page","setPage","e","parseInt","target","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e44e68b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileImage.cf70bd69.PNG\";","import React from 'react';\r\n\r\nclass Nav extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav>\r\n                <button id=\"1\" onClick={this.props.onClick}>Projects</button>\r\n                <button id=\"2\" onClick={this.props.onClick}>Skills</button>\r\n                <button id=\"3\" onClick={this.props.onClick}>About</button>\r\n                <button id=\"4\" onClick={this.props.onClick}>Contact</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass Social extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"links\">\r\n                <div onClick={() => {\r\n                    window.open('https://github.com/stevenwang2060', '_blank');\r\n                }}>\r\n                    <FontAwesomeIcon icon={faGithubSquare} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Social;","import React from 'react';\r\nimport Nav from './Nav';\r\nimport Social from './Social';\r\nimport ProfileImage from '../../img/profileImage.PNG';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <header>\r\n                <div className=\"profile-container\">\r\n                    <img src={ProfileImage} alt=\"Steven Wang\"/>\r\n                    <button id=\"0\" onClick={this.props.onClick}>\r\n                        <h1>Steven Wang</h1>\r\n                    </button>\r\n                    <h3>Full Stack Web Developer</h3>\r\n                </div>\r\n                <div className=\"mobile\">\r\n                    <Nav onClick={this.props.onClick}/>\r\n                    <Social/>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Intro.css'\r\n\r\nclass Intro extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"intro\">\r\n                <h1>Welcome</h1>\r\n                <h1>To My</h1>\r\n                <h1>Portfolio!</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n  } from 'reactstrap';\r\n\r\nconst ProjectButton = styled.button`\r\n    font-family: 'Cambay', sans-serif;\r\n    font-size: 1.5rem;\r\n    background-color: dodgerblue;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none !important;\r\n    width: 130px;\r\n    padding: 10px;\r\n    padding-top: 15px;\r\n    margin: 0 10px;\r\n`;\r\n\r\nfunction ProjectCard(props){\r\n    return(\r\n        <Card>\r\n            <CardBody>\r\n            <CardTitle>{props.title}</CardTitle>\r\n            <CardSubtitle>{props.stack}</CardSubtitle>\r\n            <CardText>{props.desc}</CardText>\r\n            <CardText>My Roles:</CardText>\r\n            <ul>\r\n                <li>{props.roles[0]}</li>\r\n                <li>{props.roles[1]}</li>\r\n            </ul>\r\n            <div className=\"button-container\">\r\n                <ProjectButton onClick={() => {\r\n                    window.open(props.projectURL, '_blank');\r\n                }}>View Project</ProjectButton>\r\n                <ProjectButton onClick={() => {\r\n                    window.open(props.gitHubURL, '_blank');\r\n                }}>View Code</ProjectButton>\r\n            </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","const projectData = [\r\n    {\r\n        title: 'Symphinity',\r\n        techStack: 'HTML, CSS, JavaScript',\r\n        desc: `A web-application that suggests songs from Spotify for your choosing.`,\r\n        roles: ['Develop Landing Page', 'Link to the Web-Application'],\r\n        projectURL: 'https://bw-spotify-song-suggester.github.io/UI-Steven/',\r\n        gitHubURL: 'https://github.com/bw-spotify-song-suggester/UI-Steven'\r\n    }, \r\n    {\r\n        title: 'NASA Photo of the Day',\r\n        techStack: 'HTML, CSS, JavaScript, React',\r\n        desc: `A website that calls the API from NASA to get the photo of the day`,\r\n        roles: ['Develop Page', 'Call API'],\r\n        projectURL: '',\r\n        gitHubURL: 'https://github.com/stevenwang2060/nasa-photo-of-the-day'\r\n    }\r\n]\r\n\r\nexport default projectData;","import React, { useState } from 'react';\r\nimport ProjectCard from './ProjectCard';\r\nimport projectData from '../../data/projectData';\r\nimport './Project.css'\r\n\r\nfunction Project(){\r\n    const [data] = useState(projectData);\r\n\r\n    return(\r\n        <div className=\"project\">\r\n            <h1>My Projects</h1>\r\n            <div className=\"project-container\">\r\n            {data.map((card, index) => {\r\n                return <ProjectCard \r\n                            key={index} \r\n                            url={card.imgsrc} \r\n                            title={card.title} \r\n                            stack={card.techStack}\r\n                            desc={card.desc}\r\n                            roles={card.roles}\r\n                            projectURL={card.projectURL}\r\n                            gitHubURL={card.gitHubURL}\r\n                        />\r\n            })}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Project;","const skillData = [\r\n    {\r\n        iconClass: \"faHtml5\",\r\n        skillName: \"HTML\"\r\n    },\r\n    {\r\n        iconClass: \"faCss3\",\r\n        skillName: \"CSS\"\r\n    },\r\n    {\r\n        iconClass: \"faLess\",\r\n        skillName: \"LESS\"\r\n    },\r\n    {\r\n        iconClass: \"faSass\",\r\n        skillName: \"SASS\"\r\n    },\r\n    {\r\n        iconClass: \"faReact\",\r\n        skillName: \"React.js\"\r\n    },\r\n    {\r\n        iconClass: \"faNodeJs\",\r\n        skillName: \"Node.js\"\r\n    },\r\n]\r\n\r\nexport default skillData;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction SkillCard(props){\r\n    return(\r\n        <div className=\"skill-card\">\r\n            <FontAwesomeIcon icon={props.icon}/>\r\n            <p>{props.name}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkillCard;","import React, { useState } from 'react';\r\nimport skillData from '../../data/skillData';\r\nimport SkillCard from './SkillCard';\r\nimport './Skills.css'\r\nimport GitHubCalendar from 'react-github-calendar';\r\n\r\nimport { faHtml5, faCss3, faLess, faSass,\r\n    faReact, faNodeJs, faJsSquare \r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { faCode } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Skills(){\r\n    const [data] = useState(skillData);\r\n    return(\r\n        <div className=\"skill\">\r\n            <h1>My Skills</h1>\r\n            <div className=\"skill-container\">\r\n                <SkillCard icon={faHtml5} name={data[0].skillName}/>\r\n                <SkillCard icon={faCss3} name={data[1].skillName}/>\r\n                <SkillCard icon={faLess} name={data[2].skillName}/>\r\n                <SkillCard icon={faReact} name={data[3].skillName}/>\r\n                <SkillCard icon={faNodeJs} name={data[4].skillName}/>\r\n                <SkillCard icon={faCode} name={data[5].skillName}/>\r\n            </div>\r\n\r\n            <GitHubCalendar username='stevenwang2060' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport './About.css';\r\n\r\nclass About extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"about\">\r\n                <h1>About Me</h1>\r\n                <div className=\"text\">\r\n                    <p>\r\n                    I lived throughout most of my life on the computer ever since I was a kid. There were goals I've had during my previous time in which were unrelated to computer science. However, I realized that they were uninteresting to me and they only have the money factor remaining as a positive in my eyes. From now on, I've dedicated my life towards my computer and want to have a career that revolves around using one. I hope to succeed along with my peers in the future as full stack web developers.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Contact.css'\r\n\r\nfunction Contact(){\r\n        return(\r\n            <div className=\"contact\">\r\n                <h1>Contact Me</h1>\r\n                <form>\r\n                    <label>Name</label>\r\n                    <input type=\"name\" name=\"name\"></input>\r\n                    <label>Email</label>\r\n                    <input type=\"email\" name=\"email\"></input>\r\n                    <label>Message</label>\r\n                    <textarea type=\"text\" name=\"message\"></textarea>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Intro from './Intro/Intro';\r\nimport Project from './Project/Project';\r\nimport Skills from './Skills/Skills';\r\nimport About from './About/About';\r\nimport Contact from './Contact/Contact';\r\n\r\nfunction Page(props){\r\n    switch(props.currentPage){\r\n        case 0:\r\n            return <Intro/>;\r\n        case 1:\r\n            return <Project/>;\r\n        case 2:\r\n            return <Skills/>;\r\n        case 3:\r\n            return <About/>;\r\n        case 4:\r\n            return <Contact/>;\r\n        default: \r\n            return <Intro/>;\r\n    }\r\n}\r\n\r\nexport default Page;","import React, { useState } from 'react';\nimport Header from './components/Header/Header';\nimport Page from './components/Page';\nimport './App.css';\n\nfunction App(){\n  const [ page, setPage ] = useState(0);\n\n  function handlePageChange(e){\n    setPage(parseInt(e.target.id, 10));\n  }\n\n  return (\n    <div className=\"app\">\n      <Header onClick={handlePageChange}/>\n      <Page currentPage={page}/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}